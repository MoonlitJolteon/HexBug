[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "HexBug"
version = "0.1.0" # TODO: auto-update this or something
dependencies = [
    "black~=22.10.0",
    "discord.py~=2.0.1",
    "jproperties~=2.1.1",
    "typing_extensions~=4.7.1",
]

[project.optional-dependencies]
all = [
    "networkx~=3.1",
    "matplotlib~=3.6.0",
    "lark~=1.1.2",
    "numpy~=1.23.1",
    "python-dotenv~=0.21.0",
    "sty~=1.0.4",
    "pillow~=9.2.0",
    "semver~=3.0.0",
    "hexnumgen @ git+https://github.com/object-Object/hexnumgen-rs.git@70d683ee9b",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
include = ["src/HexBug", "vendor/*"]
sources = ["src", "vendor"]

[tool.black]
line-length = 120
extend-exclude = """(
    ^/vendor
    | ^/Hexal
    | ^/HexMod
    | ^/MoreIotas
    | ^/HexTweaks
    | ^/HexKinetics
)"""

[tool.pyright]
pythonVersion = "3.11"
pythonPlatform = "All"

enableExperimentalFeatures = true

typeCheckingMode = "basic"

# strictDictionaryInference = true
# strictListInference = true
# strictSetInference = true

# reportAssertAlwaysTrue = "error"
# reportConstantRedefinition = "error"
# reportDeprecated = "error"
# reportDuplicateImport = "error"
# reportFunctionMemberAccess = "error"
# reportIncompatibleMethodOverride = "error"
# reportIncompleteStub = "error"
# reportInconsistentConstructor = "error"
# reportInvalidStringEscapeSequence = "error"
# reportInvalidStubStatement = "error"
# reportInvalidTypeVarUse = "error"
# reportMatchNotExhaustive = "error"
# reportMissingParameterType = "error"
# reportMissingTypeStubs = "error"
# reportOverlappingOverload = "error"
# reportSelfClsParameterName = "error"
# reportTypeCommentUsage = "error"
# reportUnknownParameterType = "error"
# reportUnnecessaryCast = "error"
# reportUnnecessaryContains = "error"
# reportUnsupportedDunderAll = "error"
# reportUntypedBaseClass = "error"
# reportUntypedClassDecorator = "error"
# reportUntypedFunctionDecorator = "error"
# reportUntypedNamedTuple = "error"
# reportWildcardImportFromLibrary = "error"

# reportMissingTypeArgument = "warning"
# reportPrivateUsage = "warning"
# reportUnnecessaryComparison = "warning"
# reportUnnecessaryIsInstance =  	"warning"
# reportUnusedClass = "warning"
# reportUnusedExpression = "warning"
# reportUnusedFunction = "warning"
# reportUnusedImport = "warning"
# reportUnusedVariable = "warning"

# TODO: move back to warning
reportUnknownLambdaType = "none"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"

reportUnknownVariableType = "none"
reportIncompatibleVariableOverride = "none"
